<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.companion.mapper.PurchaseMapper">
    <select id="selectNum" resultType="string">
        select concat(to_char(now(), 'YYYYMMDD'), coalesce(max(substr(PURCHASE_NUM,9))::integer,10000) + 1)
        from PURCHASE
        where substr(PURCHASE_NUM,1,8) = to_char(now(), 'YYYYMMDD')
    </select>
    <insert id="purchaseInsert" parameterType="com.example.companion.domain.PurchaseDTO">
        insert into purchase(purchase_num,purchase_date,purchase_price,delivery_addr,delivery_addr_detail
        ,delivery_post,delivery_phone,message,purchase_status,member_num
        ,delivery_name)
        values(#{purchaseNum},now(),#{purchasePrice},#{deliveryAddr},#{deliveryAddrDetail}
        ,#{deliveryPost},#{deliveryPhone},#{message},#{purchaseStatus},#{memberNum}
        ,#{deliveryName})
    </insert>
    <insert id="purchaseListInsert" parameterType="com.example.companion.domain.PurchaseListDTO">
        insert into purchase_List(goods_num,purchase_num,purchase_qty,total_price)
        select c.goods_num, #{purchaseNum}, cart_qty , goods_price * cart_qty
        from goods g , cart c
        where g.goods_num = c.goods_num and member_num = #{memberNum}
        and g.goods_num in
        <foreach collection="goodsNums" item="goodsNum" close=")" open="(" index="index" separator=",">
            #{goodsNum}
        </foreach>
    </insert>
    <resultMap type="com.example.companion.domain.PurchaseDTO" id="purchaseResultMap">
        <constructor>
            <idArg column="purchase_Num" javaType="string" />
            <arg column="purchase_Date" javaType="java.util.Date"/>
            <arg column="purchase_Price" javaType="integer"/>
            <arg column="delivery_Addr" javaType="string"/>
            <arg column="delivery_Addr_Detail" javaType="string"/>
            <arg column="delivery_Post" javaType="string"/>
            <arg column="delivery_Phone" javaType="string"/>
            <arg column="message" javaType="string"/>
            <arg column="purchase_Status" javaType="string"/>
            <arg column="member_num" javaType="string"/>
            <arg column="delivery_name" javaType="string"/>
        </constructor>
    </resultMap>
    <select id="purchaseSelect" parameterType="string" resultMap="purchaseResultMap">
        select  PURCHASE_NUM, PURCHASE_date, PURCHASE_PRICE, delivery_Addr
        ,delivery_Addr_Detail, delivery_Post,delivery_Phone,  message, purchase_Status
        ,delivery_name, member_num
        from purchase
        where purchase_num = #{purchaseNum}
    </select>
    <select id="purchaseGoodsCount" parameterType="string" resultType="integer">
        select count(*) from purchase_list
        where purchase_num = #{purchaseNum}
    </select>
    <select id="firstGoods" parameterType="string" resultType="string">
        select goods_name from goods
        where goods_num = ( select goods_num from (
        select ROW_NUMBER() over(order by goods_num ) rn , goods_num from purchase_list
        where purchase_num = #{purchaseNum}
        ) sub
        where rn = 1
        )
    </select>
    <insert id="paymentInsert" parameterType="com.example.companion.domain.PaymentDTO">
        insert into payment(purchase_num,confirmnumber,cardnum,tid,totalprice,resultmessage,paymethod
        ,appldate,appltime,purchasename)
        values(#{purchaseNum},#{confirmnumber},#{cardnum},#{tid},#{totalprice},#{resultmessage}
        ,#{paymethod},#{appldate},#{appltime},#{purchasename})
    </insert>
    <update id="purchaseStatusUpdate" parameterType="string">
        update purchase
        set purchase_status = #{status}
        where purchase_num = #{purchaseNum}
    </update>
    <resultMap type="com.example.companion.domain.OrderListDTO" id="orderListResultMap">
        <association property="purchaseDTO" javaType="com.example.companion.domain.PurchaseDTO" resultMap="purchaseResultMap"/>
        <association property="paymentDTO" javaType="com.example.companion.domain.PaymentDTO"><!-- resultMap이 없어 직접정의 -->
            <id  column="purchase_num" jdbcType="VARCHAR" property="purchaseNum"/>
            <result column="confirmnumber" jdbcType="VARCHAR" property="confirmnumber"/>
            <result column="paymethod" jdbcType="VARCHAR" property="paymethod"/>
            <result column="totalprice" jdbcType="VARCHAR" property="totalprice"/>
            <result column="appldate" jdbcType="VARCHAR" property="appldate"/>
            <result column="appltime" jdbcType="VARCHAR" property="appltime"/>
            <result column="cardnum" jdbcType="VARCHAR" property="cardnum"/>
        </association>
        <association property="deliveryDTO" javaType="com.example.companion.domain.DeliveryDTO">
            <id  column="purchase_num" jdbcType="VARCHAR" property="purchaseNum"/>
            <result column="delivery_num" jdbcType="VARCHAR" property="deliveryNumber"/>
            <result column="delivery_date" jdbcType="DATE" property="deliveryDate"/>
            <result column="delivery_state" jdbcType="VARCHAR" property="deliveryState"/>
            <result column="delivery_Company" jdbcType="VARCHAR" property="deliveryCompany"/>
        </association>
        <collection property="purchaseListGoodsDTOs" ofType="com.example.companion.domain.PurchaseListGoodsDTO">
            <association property="purchaseList" javaType="com.example.companion.domain.PurchaseListDTO">
                <result column="purchasae_qty" jdbcType="BIGINT" property="purchaseQty"/>
                <result column="total_price" jdbcType="BIGINT" property="totalPrice"/>
            </association>
            <association property="goods" javaType="com.example.companion.domain.GoodsDTO"><!-- resultMap이 없으므로 작성해야합니다. -->
                <id column="goods_Num" jdbcType="VARCHAR" property="goodsNum"/>
                <result column="goods_name" jdbcType="VARCHAR" property="goodsName"/>
                <result column="goods_price" jdbcType="BIGINT" property="goodsPrice"/>
                <result column="goods_content" jdbcType="VARCHAR" property="goodsContent"/>
                <result column="delivery_cost" jdbcType="BIGINT" property="deliveryCost"/>
                <result column="emp_num" jdbcType="VARCHAR" property="empNum"/>
                <result column="goods_regist" jdbcType="DATE" property="goodsRegist"/>
                <result column="goods_main_store" jdbcType="VARCHAR" property="goodsMainStore"/>
                <result column="goods_main_store_img" jdbcType="VARCHAR" property="goodsMainStoreImg"/>
                <result column="goods_images" jdbcType="VARCHAR" property="goodsImages"/>
                <result column="goods_images_img" jdbcType="VARCHAR" property="goodsImagesImg"/>
                <result column="visit_count" jdbcType="BIGINT" property="visitCount"/>
                <result column="update_Emp_Num" jdbcType="VARCHAR" property="updateEmpNum"/>
                <result column="goods_Update_Date" jdbcType="DATE" property="goodsUpdateDate"/>
            </association>
        </collection>
    </resultMap>
    <select id="orderList" parameterType="string" resultMap="orderListResultMap">
        select 	  p.PURCHASE_NUM, PURCHASE_date, PURCHASE_PRICE, delivery_Addr
        , delivery_Addr_Detail, delivery_Post,delivery_Phone,  message, purchase_Status
        , member_num, delivery_name
        , CONFIRMNUMBER, appltime , paymethod, totalprice, appldate, cardnum
        , purchase_qty, total_price
        , g.goods_Num, goods_Name, goods_main_store, delivery_Cost, goods_Price
        , goods_Content
        , delivery_num, delivery_date, delivery_state, delivery_Company<!-- 배송정보 추가 -->
        from purchase p left outer join payment pm
        on p.PURCHASE_NUM = pm.PURCHASE_NUM join purchase_list pl
        on p.PURCHASE_NUM = pl.PURCHASE_NUM join goods g
        on pl.goods_num = g.goods_num left outer join delivery d
        on p.PURCHASE_NUM = d.PURCHASE_NUM
        <where>
            <if test="memberNum != null">
            member_num = #{memberNum}
            </if>
            <if test="purchaseNum != null">
                p.purchase_Num = #{purchaseNum}
            </if>
        </where>
    </select>
    <delete id="paymentDelete" parameterType="string">
        delete from payment
        where purchase_num = #{purchaseNum}
    </delete>
</mapper>